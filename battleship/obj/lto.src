	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z9float2strfPc
__Z9float2strfPc:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, -8187281
	ld	a, 58
	ld	iyl, 0
	call	__fcmp
	jp	m, BB0_2
	ld	a, 0
	jr	BB0_3
BB0_2:
	ld	a, 1
BB0_3:
	bit	0, a
	ld	bc, 0
	jr	nz, BB0_5
	push	hl
	pop	bc
BB0_5:
	lea	hl, ix - 9
	bit	0, a
	jr	nz, BB0_7
	ld	iyl, e
BB0_7:
	push	iy
	push	bc
	push	hl
	ld	(ix - 12), hl
	call	_os_FloatToReal
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	dec	hl
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_os_RealToStr
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z8new_gridi
__Z8new_gridi:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	ld	bc, 24
	call	__imulu
	push	hl
	call	_malloc
	pop	de
	ld	(ix - 3), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB1_2
	ld	hl, 1
	push	hl
	call	_exit
	pop	hl
BB1_2:
	ld	bc, 1
	ld	hl, (ix + 6)
	ld	(ix - 9), hl
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	dec	bc
	jp	p, BB1_4
	ld	(ix - 9), bc
BB1_4:
	ld	hl, (ix - 3)
	ld	(ix - 6), hl
	push	bc
	pop	hl
BB1_5:
	ld	(ix - 12), hl
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	push	bc
	pop	iy
	jr	z, BB1_9
BB1_6:
	lea	hl, iy
	ld	de, 24
	or	a, a
	sbc	hl, de
	jr	z, BB1_8
	lea	bc, iy
	lea	de, iy
	ld	iy, (ix - 6)
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	(iy), hl
	push	de
	pop	iy
	ld	bc, 0
	ld	de, 3
	add	iy, de
	jr	BB1_6
BB1_8:
	ld	hl, (ix - 12)
	inc	hl
	ld	iy, (ix - 6)
	lea	iy, iy + 24
	ld	(ix - 6), iy
	jr	BB1_5
BB1_9:
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z9draw_gridPA8_iS0_S0_iiP4shipb
__Z9draw_gridPA8_iS0_S0_iiP4shipb:
	ld	hl, -70
	call	__frameset
	lea	hl, ix - 9
	ld	(ix - 44), hl
	lea	hl, ix - 36
	ld	(ix - 41), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 8
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 18
	push	hl
	ld	hl, 8
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, _.str.1
	push	hl
	ld	hl, (ix - 44)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 9
	push	hl
	dec	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, (ix - 44)
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	bit	0, (ix + 24)
	jr	z, BB2_3
	ld	hl, _.str.2
	ld	de, (ix + 15)
	push	de
	push	hl
	ld	hl, (ix - 41)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 41)
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.3
	push	hl
	call	_os_PutStrFull
	pop	hl
BB2_2:
	ld	sp, ix
	pop	ix
	ret
BB2_3:
	ld	hl, (ix + 6)
	ld	(ix - 50), hl
	ld	hl, (ix + 9)
	ld	(ix - 53), hl
	ld	hl, (ix + 12)
	ld	(ix - 56), hl
	ld	iy, 5
	ld	hl, 18
	ld	(ix - 66), hl
	lea	hl, ix - 38
	ld	(ix - 70), hl
	ld	de, 8
	or	a, a
	sbc	hl, hl
BB2_4:
	ld	bc, (ix + 15)
	ld	(ix - 44), hl
	or	a, a
	sbc	hl, de
	jp	z, BB2_22
	ld	hl, 55
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	hl, 8
	push	hl
	ld	hl, (ix - 44)
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, (ix - 44)
	inc	hl
	ld	(ix - 60), hl
	push	hl
	ld	hl, _.str.4
	push	hl
	ld	hl, (ix - 41)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 41)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 17
	push	hl
	ld	hl, (ix - 44)
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, (ix - 41)
	push	hl
	call	_os_PutStrFull
	ld	bc, 0
	pop	hl
	ld	iyl, b
BB2_6:
	push	bc
	pop	hl
	ld	de, 24
	or	a, a
	sbc	hl, de
	jp	z, BB2_21
	ld	(ix - 47), bc
	ld	a, iyl
	add	a, 18
	ld	hl, (ix + 15)
	ld	de, 1
	or	a, a
	sbc	hl, de
	push	af
	ld	a, iyl
	ld	(ix - 57), a
	pop	af
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	jr	z, BB2_9
	ld	l, a
BB2_9:
	ld	(ix - 63), hl
	ld	(ix - 67), a
	push	hl
	ld	de, (ix - 44)
	push	de
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	de, (ix - 47)
	ld	iy, (ix - 50)
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, _.str.5
	jr	z, BB2_11
	push	hl
	ld	hl, _.str.4
	push	hl
	ld	hl, (ix - 41)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 41)
BB2_11:
	push	de
	call	_os_PutStrFull
	pop	hl
	ld	hl, (ix - 63)
	push	hl
	ld	hl, (ix - 44)
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	de, (ix - 47)
	ld	iy, (ix - 56)
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_15
	ld	de, (ix - 47)
	ld	iy, (ix - 50)
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, _.str.6
	jr	z, BB2_14
	ld	hl, _.str.7
BB2_14:
	push	hl
	call	_os_PutStrFull
	pop	hl
BB2_15:
	ld	hl, (ix + 15)
	ld	de, 2
	or	a, a
	sbc	hl, de
	ld	l, (ix - 57)
	jr	z, BB2_17
	ld	l, (ix - 67)
BB2_17:
	push	hl
	ld	hl, (ix - 44)
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	de, (ix - 47)
	ld	iy, (ix - 53)
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 63), hl
	ld	hl, 55
	push	hl
	call	_os_SetDrawBGColor
	pop	hl
	ld	hl, (ix - 63)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, _.str.8
	jr	z, BB2_20
	ld	de, (ix - 47)
	ld	iy, (ix - 53)
	add	iy, de
	ld	hl, (iy)
	ld	de, -1
	or	a, a
	sbc	hl, de
	ld	hl, _.str.6
	jr	z, BB2_20
	ld	hl, _.str.7
BB2_20:
	push	hl
	call	_os_PutStrFull
	pop	hl
	push	af
	ld	a, (ix - 57)
	ld	iyl, a
	pop	af
	inc	iyl
	ld	de, 3
	ld	hl, (ix - 47)
	add	hl, de
	push	hl
	pop	bc
	jp	BB2_6
BB2_21:
	ld	iy, (ix - 50)
	lea	iy, iy + 24
	ld	(ix - 50), iy
	ld	iy, (ix - 56)
	lea	iy, iy + 24
	ld	(ix - 56), iy
	ld	iy, (ix - 53)
	lea	iy, iy + 24
	ld	(ix - 53), iy
	ld	hl, (ix - 60)
	ld	iy, 5
	ld	de, 8
	jp	BB2_4
BB2_22:
	lea	hl, iy
	ld	de, (ix + 18)
	or	a, a
	sbc	hl, de
	ld	(ix - 41), hl
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	ld	iy, 0
	jr	z, BB2_24
	ld	(ix - 66), iy
BB2_24:
	ld	bc, 17
	ld	de, (ix - 41)
	push	de
	pop	hl
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix + 21)
	add	hl, bc
	ld	(ix - 44), hl
	lea	bc, iy
BB2_25:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB2_2
	push	bc
	pop	hl
	push	de
	pop	iy
	ld	de, 5
	or	a, a
	sbc	hl, de
	lea	de, iy
	jp	z, BB2_2
	ld	(ix - 47), bc
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nz, BB2_33
	ld	iy, (ix - 44)
	ld	hl, (iy)
	ld	(ix - 60), hl
	ld	hl, (iy + 3)
	ld	(ix - 50), hl
	ld	a, (iy + 6)
	ld	(ix - 57), a
	ld	hl, (iy + 7)
	ld	e, (iy + 10)
	ld	(ix - 53), hl
	ld	a, l
	ld	hl, (ix - 66)
	add	a, l
	ld	l, a
	push	hl
	ld	(ix - 56), e
	ld	l, e
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, (ix - 60)
	push	hl
	ld	hl, _.str.4
	push	hl
	ld	hl, (ix - 70)
	push	hl
	call	_sprintf
	ld	iy, (ix - 50)
	ld	de, 0
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 57)
	and	a, 1
	ld	(ix - 57), a
	xor	a, 1
	ld	(ix - 60), a
	lea	hl, iy
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB2_30
	push	de
	pop	iy
BB2_30:
	ld	hl, (ix - 66)
	ld	a, l
	ld	hl, (ix - 53)
	add	a, l
	add	a, (ix - 60)
	ld	l, a
	ld	(ix - 53), hl
	ld	a, (ix - 57)
	add	a, (ix - 56)
	ld	l, a
	ld	(ix - 56), hl
BB2_31:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 41)
	jr	z, BB2_33
	ld	hl, (ix - 70)
	push	hl
	ld	(ix - 50), iy
	call	_os_PutStrFull
	pop	hl
	ld	hl, (ix - 53)
	push	hl
	ld	hl, (ix - 56)
	push	hl
	call	_os_SetCursorPos
	ld	iy, (ix - 50)
	pop	hl
	pop	hl
	ld	hl, (ix - 53)
	ld	a, l
	add	a, (ix - 60)
	ld	l, a
	ld	(ix - 53), hl
	ld	hl, (ix - 56)
	ld	a, l
	add	a, (ix - 57)
	ld	l, a
	ld	(ix - 56), hl
	dec	iy
	jr	BB2_31
BB2_33:
	ld	bc, (ix - 47)
	inc	bc
	jp	BB2_25
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -246
	call	__frameset
	ld	bc, -185
	lea	iy, ix
	add	iy, bc
	lea	hl, ix - 91
	push	ix
	ld	bc, -203
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, iy + 9
	push	ix
	ld	bc, -218
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, iy
	push	ix
	ld	bc, -206
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy
	ld	bc, -224
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.9
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 7
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.10
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 8
	push	hl
	call	__Z8new_gridi
	ld	bc, -188
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, 8
	push	hl
	call	__Z8new_gridi
	ld	bc, -191
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, 8
	push	hl
	call	__Z8new_gridi
	ld	bc, -194
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, 8
	push	hl
	call	__Z8new_gridi
	ld	bc, -197
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, 2
	ld	de, 0
	push	hl
	pop	bc
BB3_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB3_12
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, -203
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	jr	z, BB3_4
	ld	bc, -218
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB3_4:
	lea	iy, iy + 3
	ld	bc, 1
BB3_5:
	push	bc
	pop	hl
	ld	de, 6
	or	a, a
	sbc	hl, de
	jr	z, BB3_11
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	inc	de
	jr	z, BB3_8
	push	bc
	pop	de
BB3_8:
	ld	(ix - 3), bc
	ld	bc, -209
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ex	de, hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	ld	hl, 2
	ld	bc, (ix - 3)
	jr	z, BB3_10
	ld	de, -209
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
BB3_10:
	ld	(iy - 3), bc
	ld	(iy), hl
	or	a, a
	sbc	hl, hl
	ld	(iy + 3), hl
	ld	(iy + 6), hl
	ld	(iy + 9), l
	ld	(iy + 10), h
	inc	bc
	lea	iy, iy + 17
	jr	BB3_5
BB3_11:
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	inc	de
	ld	bc, 2
	jp	BB3_1
BB3_12:
	call	_os_GetCSC
	or	a, a
	jr	z, BB3_12
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.11
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.12
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 8
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.10
	push	hl
	call	_os_PutStrFull
	pop	hl
BB3_14:
	call	_os_GetCSC
	or	a, a
	jr	z, BB3_14
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.11
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.13
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 5
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.14
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 8
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.10
	push	hl
	call	_os_PutStrFull
	pop	hl
BB3_16:
	call	_os_GetCSC
	or	a, a
	jr	z, BB3_16
	ld	bc, -3145600
	ld	a, 1
	ld	de, -230
	lea	hl, ix
	add	hl, de
	ld	(hl), a
BB3_18:
	ld	hl, (_player)
	ld	de, 1
	or	a, a
	sbc	hl, de
	ld	a, -1
	jr	z, BB3_20
	ld	a, 0
BB3_20:
	bit	0, a
	ld	de, -203
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	jr	nz, BB3_22
	ld	de, -218
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
BB3_22:
	ld	de, -215
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	bit	0, a
	ld	de, -188
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	push	ix
	ld	de, -209
	push	af
	add	ix, de
	pop	af
	ld	(ix), hl
	pop	ix
	jr	nz, BB3_24
	ld	de, -191
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, -209
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
BB3_24:
	bit	0, a
	ld	de, -191
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	jr	nz, BB3_26
	ld	de, -188
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
BB3_26:
	bit	0, a
	ld	(ix - 3), bc
	ld	bc, -194
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	de, (iy)
	push	ix
	ld	bc, -212
	push	af
	add	ix, bc
	pop	af
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	jr	nz, BB3_28
	ld	(ix - 3), bc
	ld	bc, -197
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	ix
	ld	bc, -212
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
BB3_28:
	bit	0, a
	ld	(ix - 3), bc
	ld	bc, -197
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	de, (iy)
	ld	bc, (ix - 3)
	jr	nz, BB3_30
	ld	(ix - 3), bc
	ld	bc, -194
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	bc, (ix - 3)
BB3_30:
	bit	0, a
	ld	(ix - 3), bc
	ld	bc, -227
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	(iy), hl
	ld	bc, -221
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	(hl), de
	ld	bc, (ix - 3)
	jr	nz, BB3_32
	ld	hl, (_p2_ships_to_place)
	jr	BB3_33
BB3_32:
	ld	hl, (_p1_ships_to_place)
BB3_33:
	ld	de, -200
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	push	bc
	pop	iy
	call	_os_ClrLCD
	ld	iy, -3145600
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, (_winner)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_150
	ld	hl, (_player)
	ld	a, (_player_switcher)
	ld	e, a
	push	de
	ld	bc, -215
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	ix
	ld	bc, -200
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	hl
	ld	bc, -212
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -221
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -209
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	__Z9draw_gridPA8_iS0_S0_iiP4shipb
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	a, (_player_switcher)
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB3_52
	or	a, a
	jp	nz, BB3_52
	ld	hl, 5
	ld	bc, -200
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 17
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	ix
	ld	de, -215
	add	ix, de
	ld	iy, (ix)
	pop	ix
	add	iy, bc
	push	ix
	ld	bc, -242
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	a, (iy + 6)
	ld	bc, -236
	lea	iy, ix
	add	iy, bc
	ld	(iy), a
	bit	0, a
	ld	de, (ix - 3)
	push	ix
	ld	bc, -239
	push	af
	add	ix, bc
	pop	af
	ld	(ix), de
	pop	ix
	ex	de, hl
	ld	bc, 17
	jr	nz, BB3_38
	call	__imulu
	push	hl
	pop	bc
	ld	de, -215
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	ld	bc, (iy + 7)
	jr	BB3_39
BB3_38:
	call	__imulu
	push	hl
	pop	bc
	ld	de, -215
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	ld	bc, (iy + 10)
BB3_39:
	ld	iy, (iy + 3)
	push	ix
	ld	de, -230
	add	ix, de
	ld	(ix), iy
	pop	ix
	add	iy, bc
	lea	hl, iy
	ld	de, 9
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	a, 1
	ld	c, a
	jp	m, BB3_41
	ld	a, 0
	ld	c, a
BB3_41:
	lea	hl, iy
	ld	de, 9
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	hl, _.str.22
	push	hl
	pop	de
	ld	a, 0
	jp	p, BB3_50
	ld	de, -243
	lea	hl, ix
	add	hl, de
	ld	(hl), c
	ld	de, -239
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	ld	bc, 17
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -215
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	add	iy, de
	ld	hl, (iy + 7)
	push	ix
	ld	de, -246
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	iy, (iy + 10)
	ld	bc, (ix - 3)
	ld	de, -236
	lea	hl, ix
	add	hl, de
	ld	c, (hl)
	ld	a, c
	xor	a, 1
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	(ix - 3), bc
	push	ix
	ld	bc, -239
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, (ix - 3)
	ld	e, c
	ld	(ix - 3), de
	ld	de, -230
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	de, (ix - 3)
	jp	p, BB3_44
	or	a, a
	sbc	hl, hl
	push	ix
	ld	bc, -230
	add	ix, bc
	ld	(ix), hl
	pop	ix
BB3_44:
	lea	hl, iy
	ld	bc, 24
	call	__imulu
	push	hl
	pop	iy
	ld	(ix - 3), de
	push	ix
	ld	de, -246
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	lea	bc, iy
	ld	de, -209
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	push	ix
	ld	bc, -236
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (ix - 3)
	ex	de, hl
	ld	bc, 24
	call	__imulu
	push	hl
	pop	iy
	push	ix
	ld	de, -239
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	(ix - 3), bc
	ld	bc, -243
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	bc, (ix - 3)
BB3_45:
	ld	bc, -230
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_48
	ld	bc, -236
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_49
	add	iy, de
	ld	bc, -236
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	bc, -230
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	dec	hl
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	jr	BB3_45
BB3_48:
	ld	hl, _.str.20
	ex	de, hl
	ld	hl, _.str.21
	jr	BB3_50
BB3_49:
	ld	hl, _.str.22
	push	hl
	pop	de
	xor	a, a
BB3_50:
	ld	bc, -239
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	ix
	ld	bc, -236
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -230
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	hl, 9
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -239
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 1
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -236
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 2
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.23
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 3
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.24
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 4
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.25
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 5
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.26
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, 5
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB3_52
	ld	hl, 9
	push	hl
	ld	hl, 6
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.27
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 7
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.28
	push	hl
	call	_os_PutStrFull
	pop	hl
BB3_52:
	ld	a, (_player_switcher)
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_66
	or	a, a
	jp	nz, BB3_66
	ld	hl, 9
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.29
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 12
	push	hl
	ld	hl, 1
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	de, (_player_cursor_x)
	push	de
	pop	hl
	ld	bc, 8
	or	a, a
	sbc	hl, bc
	jp	nc, BB3_65
	ld	hl, JTI3_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB3_56:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 65
	jr	BB3_64
BB3_57:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 66
	jr	BB3_64
BB3_58:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 67
	jr	BB3_64
BB3_59:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 68
	jr	BB3_64
BB3_60:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 69
	jr	BB3_64
BB3_61:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 70
	jr	BB3_64
BB3_62:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 71
	jr	BB3_64
BB3_63:
	ld	bc, -233
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 72
BB3_64:
	ld	(iy), l
	ld	(iy + 1), h
BB3_65:
	ld	bc, -224
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 13
	push	hl
	ld	hl, 1
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, (_player_cursor_y)
	inc	hl
	push	hl
	ld	hl, _.str.4
	push	hl
	ld	bc, -224
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -224
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 2
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.20
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 3
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.38
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, (_shots_left)
	push	hl
	ld	hl, _.str.4
	push	hl
	ld	bc, -224
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 9
	push	hl
	ld	hl, 6
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.39
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 13
	push	hl
	ld	hl, 7
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -224
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
BB3_66:
	call	_os_GetCSC
	ld	e, a
	or	a, a
	jr	z, BB3_66
	ld	a, e
	cp	a, 20
	jp	z, BB3_170
	ld	a, (_player_switcher)
	ld	l, a
	bit	0, l
	jp	z, BB3_81
	ld	a, e
	cp	a, 9
	jp	nz, BB3_81
	xor	a, a
	ld	(_player_switcher), a
	sbc	hl, hl
	ld	(_shots_left), hl
	ld	de, -200
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, -3145600
	jp	nz, BB3_18
	ld	iy, 0
	ld	(_player_cursor_x), iy
	ld	(_player_cursor_y), iy
	ld	de, -209
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
BB3_72:
	lea	hl, iy
	ld	de, 5
	or	a, a
	sbc	hl, de
	jp	z, BB3_86
	ld	de, -221
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	lea	hl, iy
	ld	bc, 17
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -215
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	ld	hl, (iy + 7)
	push	ix
	ld	bc, -227
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 10)
	push	ix
	ld	bc, -200
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	(iy + 13), 1
	ld	bc, -236
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	de, (iy + 3)
	push	de
	pop	hl
	ld	bc, (ix - 3)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_75
	ld	de, 0
BB3_75:
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB3_76:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB3_80
	ld	bc, -239
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	lea	hl, iy
	ld	bc, 24
	call	__imulu
	push	hl
	pop	bc
	push	ix
	ld	de, -200
	add	ix, de
	ld	(ix), iy
	pop	ix
	ld	de, -212
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	push	ix
	ld	bc, -227
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	push	hl
	pop	de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_79
	ld	bc, -236
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	l, (iy + 6)
	ld	a, l
	xor	a, 1
	ld	iy, 0
	lea	bc, iy
	ld	c, a
	push	de
	pop	iy
	add	iy, bc
	push	ix
	ld	de, -227
	add	ix, de
	ld	(ix), iy
	pop	ix
	ld	bc, 0
	ld	c, l
	ld	de, -200
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	push	ix
	ld	bc, -239
	add	ix, bc
	ld	de, (ix)
	pop	ix
	dec	de
	jp	BB3_76
BB3_79:
	ld	de, -236
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	(iy + 13), 0
	ld	de, -209
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	inc	hl
	push	ix
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	(_shots_left), hl
BB3_80:
	ld	bc, -3145600
	ld	de, -221
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	inc	iy
	jp	BB3_72
BB3_81:
	bit	0, l
	ld	bc, -3145600
	jp	nz, BB3_18
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_113
	ld	a, e
	dec	a
	cp	a, 4
	jr	nc, BB3_94
	ld	bc, 0
	ld	c, a
	ld	hl, JTI3_1
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 1
	jp	(hl)
BB3_85:
	ld	iy, (_player_cursor_x)
	dec	iy
	jr	BB3_91
BB3_86:
	ld	de, -209
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_18
	ld	hl, (_player)
	ld	de, 2
	or	a, a
	sbc	hl, de
	jr	nz, BB3_89
	ld	hl, 1
	ld	(_winner), hl
	jp	BB3_18
BB3_89:
	ld	hl, 2
	ld	(_winner), hl
	jp	BB3_18
BB3_90:
	ld	iy, (_player_cursor_x)
	inc	iy
BB3_91:
	ld	(_player_cursor_x), iy
	jr	BB3_95
BB3_92:
	ld	bc, -1
BB3_93:
	ld	hl, (_player_cursor_y)
	add	hl, bc
	ld	(_player_cursor_y), hl
BB3_94:
	ld	iy, (_player_cursor_x)
BB3_95:
	lea	hl, iy
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_97
	ld	iy, 0
	ld	(_player_cursor_x), iy
BB3_97:
	ld	bc, -212
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	iy, (_player_cursor_y)
	lea	hl, iy
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_99
	ld	iy, 0
	ld	(_player_cursor_y), iy
BB3_99:
	ld	bc, -212
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 8
	or	a, a
	sbc	hl, bc
	jr	c, BB3_101
	ld	hl, 7
	ld	(_player_cursor_x), hl
	push	ix
	ld	bc, -212
	add	ix, bc
	ld	(ix), hl
	pop	ix
BB3_101:
	lea	hl, iy
	ld	bc, 8
	or	a, a
	sbc	hl, bc
	jr	c, BB3_103
	ld	iy, 7
	ld	(_player_cursor_y), iy
BB3_103:
	ld	a, e
	cp	a, 9
	jp	nz, BB3_113
	ld	hl, (_shots_left)
	push	ix
	ld	bc, -215
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_108
	ld	a, 1
	ld	(_player_switcher), a
	ld	hl, (_player)
	ld	de, 2
	or	a, a
	sbc	hl, de
	ld	hl, 1
	ld	bc, -3145600
	jr	z, BB3_107
BB3_106:
	ld	hl, 2
BB3_107:
	ld	(_player), hl
	jp	BB3_18
BB3_108:
	lea	hl, iy
	ld	bc, 24
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	ix
	ld	de, -221
	add	ix, de
	ld	hl, (ix)
	pop	ix
	add	hl, bc
	push	ix
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -212
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	push	ix
	ld	de, -221
	add	ix, de
	ld	hl, (ix)
	pop	ix
	add	hl, bc
	push	hl
	pop	bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jr	nz, BB3_112
	ld	(ix - 3), de
	ld	de, -221
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	lea	hl, iy
	ld	bc, 24
	call	__imulu
	push	hl
	pop	bc
	ld	de, -227
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	push	ix
	ld	de, -212
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, -1
	ld	de, (ix - 3)
	jr	z, BB3_111
	push	hl
	pop	bc
BB3_111:
	ld	(ix - 3), de
	ld	de, -221
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), bc
	ld	de, (ix - 3)
BB3_112:
	ld	bc, -215
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	dec	hl
	ld	(_shots_left), hl
BB3_113:
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	ld	bc, -3145600
	call	pe, __setflag
	jp	m, BB3_18
	ld	a, e
	dec	a
	cp	a, 4
	jp	c, BB3_124
	ld	a, e
	cp	a, 15
	jp	nz, BB3_127
	ld	hl, (_player)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	ld	hl, _p1_ships_to_place
	jr	z, BB3_118
	ld	hl, _p2_ships_to_place
BB3_118:
	ld	bc, 5
	ld	(hl), bc
	ld	bc, 0
BB3_119:
	push	bc
	pop	iy
	lea	hl, iy
	ld	bc, 8
	or	a, a
	sbc	hl, bc
	jp	z, BB3_129
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	iy, 0
BB3_121:
	lea	hl, iy
	ld	bc, 24
	or	a, a
	sbc	hl, bc
	jr	z, BB3_123
	lea	bc, iy
	ld	(ix - 3), de
	ld	de, -212
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	de, -209
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	(iy), hl
	ld	de, -212
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	bc, 3
	add	iy, bc
	ld	de, (ix - 3)
	jr	BB3_121
BB3_123:
	ld	(ix - 3), de
	ld	de, -200
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	inc	bc
	ld	de, -209
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	lea	iy, iy + 24
	push	ix
	add	ix, de
	ld	(ix), iy
	pop	ix
	ld	de, (ix - 3)
	jp	BB3_119
BB3_124:
	ld	de, 0
	ld	e, a
	ld	hl, JTI3_2
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	ld	de, -242
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	lea	de, iy + 7
	lea	iy, iy + 10
	jp	(hl)
BB3_125:
	push	de
	pop	iy
BB3_126:
	ld	de, -1
	jp	BB3_138
BB3_127:
	ld	a, e
	cp	a, 54
	jr	nz, BB3_129
	ld	bc, -242
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	a, (iy + 6)
	xor	a, 1
	ld	(iy + 6), a
BB3_129:
	ld	bc, -230
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	and	a, 1
	bit	0, a
	ld	bc, -3145600
	jp	z, BB3_18
	ld	a, e
	cp	a, 9
	jp	nz, BB3_18
	ld	hl, (_player)
	ld	bc, -215
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	ld	bc, -188
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	push	ix
	ld	bc, -212
	push	af
	add	ix, bc
	pop	af
	ld	(ix), hl
	pop	ix
	jr	z, BB3_133
	ld	bc, -191
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -212
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
BB3_133:
	ld	bc, -242
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	hl, (iy + 7)
	push	ix
	ld	bc, -209
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -242
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	hl, (iy + 10)
	ld	bc, -200
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, 0
BB3_134:
	ld	bc, -242
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	bc, (iy + 3)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_145
	ld	bc, -242
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	hl, (hl)
	ld	bc, -221
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 24
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 3), de
	push	ix
	ld	de, -212
	add	ix, de
	ld	iy, (ix)
	pop	ix
	add	iy, bc
	ld	de, (ix - 3)
	push	ix
	ld	bc, -227
	add	ix, bc
	ld	(ix), de
	pop	ix
	push	ix
	ld	bc, -209
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	pop	hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	push	ix
	ld	bc, -221
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld	(iy), hl
	ld	bc, -242
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	l, (iy + 6)
	ld	a, l
	xor	a, 1
	ld	iy, 0
	lea	bc, iy
	ld	c, a
	push	de
	pop	iy
	ld	(ix - 3), bc
	push	ix
	ld	bc, -227
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	bc, (ix - 3)
	add	iy, bc
	push	ix
	ld	bc, -209
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	bc, 0
	ld	c, l
	ld	(ix - 3), de
	ld	de, -200
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	push	ix
	ld	bc, -200
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (ix - 3)
	inc	de
	jp	BB3_134
BB3_136:
	push	de
	pop	iy
BB3_137:
	ld	de, 1
BB3_138:
	ld	hl, (iy)
	add	hl, de
	ld	(iy), hl
	ld	de, -242
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	hl, (iy + 7)
	push	ix
	ld	de, -200
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	hl, 0
	jp	m, BB3_140
	ld	de, -200
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, 8
	or	a, a
	sbc	hl, de
	ld	hl, 7
	jr	c, BB3_141
BB3_140:
	ld	(iy + 7), hl
BB3_141:
	ld	hl, (iy + 10)
	push	ix
	ld	de, -200
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB3_143
	or	a, a
	sbc	hl, hl
	ld	(iy + 10), hl
	jp	BB3_18
BB3_143:
	ld	de, -200
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, 8
	or	a, a
	sbc	hl, de
	jp	c, BB3_18
	ld	hl, 7
	ld	de, -242
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	(iy + 10), hl
	jp	BB3_18
BB3_145:
	ld	bc, -215
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB3_148
	ld	hl, (_p1_ships_to_place)
	dec	hl
	ld	(_p1_ships_to_place), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, -3145600
	jp	nz, BB3_18
	ld	a, 1
	ld	(_player_switcher), a
	jp	BB3_106
BB3_148:
	ld	hl, (_p2_ships_to_place)
	dec	hl
	ld	(_p2_ships_to_place), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, -3145600
	jp	nz, BB3_18
	ld	a, 1
	ld	(_player_switcher), a
	ld	hl, 1
	jp	BB3_107
BB3_150:
	ld	iy, 0
	lea	de, iy
BB3_151:
	push	de
	pop	hl
	ld	bc, 8
	or	a, a
	sbc	hl, bc
	ld	a, 18
	ld	l, a
	push	ix
	ld	bc, -200
	push	af
	add	ix, bc
	pop	af
	ld	(ix), hl
	pop	ix
	jp	z, BB3_167
BB3_152:
	lea	hl, iy
	ld	bc, 24
	or	a, a
	sbc	hl, bc
	jp	z, BB3_166
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	a, l
	add	a, -18
	ld	l, a
	push	ix
	ld	bc, -212
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	ld	bc, -209
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	de
	push	ix
	ld	bc, -203
	add	ix, bc
	ld	(ix), iy
	pop	ix
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -203
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, -188
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, _.str.5
	jr	z, BB3_155
	push	hl
	ld	hl, _.str.4
	push	hl
	ld	bc, -206
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -206
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
BB3_155:
	push	de
	call	_os_PutStrFull
	pop	hl
	ld	bc, -212
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -209
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -203
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, -194
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	ld	de, (iy)
	push	de
	pop	hl
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	ld	hl, _.str.6
	jr	z, BB3_158
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_159
	ld	hl, _.str.7
BB3_158:
	push	hl
	call	_os_PutStrFull
	pop	hl
BB3_159:
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -209
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -203
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, -191
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, _.str.5
	jr	z, BB3_161
	push	hl
	ld	hl, _.str.4
	push	hl
	ld	bc, -206
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -206
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
BB3_161:
	push	de
	call	_os_PutStrFull
	pop	hl
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -209
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -203
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, -197
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	ld	de, (iy)
	push	de
	pop	hl
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	ld	hl, _.str.6
	jr	z, BB3_164
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_165
	ld	hl, _.str.7
BB3_164:
	push	hl
	call	_os_PutStrFull
	pop	hl
BB3_165:
	ld	bc, -200
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	l
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, 3
	ld	bc, -203
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	add	iy, de
	push	ix
	ld	bc, -209
	add	ix, bc
	ld	de, (ix)
	pop	ix
	jp	BB3_152
BB3_166:
	inc	de
	ld	bc, -188
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	iy, iy + 24
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	bc, -194
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	lea	iy, iy + 24
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	bc, -191
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	lea	iy, iy + 24
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	bc, -197
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	lea	iy, iy + 24
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	iy, 0
	jp	BB3_151
BB3_167:
	ld	hl, (_winner)
	push	hl
	ld	hl, _.str.15
	push	hl
	ld	bc, -206
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 9
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -206
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 8
	push	hl
	ld	hl, 2
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.16
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 8
	push	hl
	ld	hl, 3
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.17
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	hl, 8
	push	hl
	ld	hl, 4
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.18
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 8
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.19
	push	hl
	call	_os_PutStrFull
	pop	hl
BB3_168:
	call	_os_GetCSC
	or	a, a
	jr	z, BB3_168
	or	a, a
	sbc	hl, hl
	jr	BB3_171
BB3_170:
	ld	hl, 1
BB3_171:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI3_0
JTI3_0:
	dl	BB3_56
	dl	BB3_57
	dl	BB3_58
	dl	BB3_59
	dl	BB3_60
	dl	BB3_61
	dl	BB3_62
	dl	BB3_63
	private	JTI3_1
JTI3_1:
	dl	BB3_93
	dl	BB3_85
	dl	BB3_90
	dl	BB3_92
	private	JTI3_2
JTI3_2:
	dl	BB3_137
	dl	BB3_125
	dl	BB3_136
	dl	BB3_126

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"ABCDEFGH", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"Player %d", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"  Pass this to player %d!  ", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"Then have them press ENTER", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"%d", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	".", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"m", 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"X", 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"?", 0

	section	.data,"aw",@progbits
	public	_player
_player:
	dl	1

	section	.bss,"aw",@nobits
	public	_player_cursor_x
_player_cursor_x:
	rb	3

	section	.bss,"aw",@nobits
	public	_player_cursor_y
_player_cursor_y:
	rb	3

	section	.data,"aw",@progbits
	public	_p1_ships_to_place
_p1_ships_to_place:
	dl	5

	section	.data,"aw",@progbits
	public	_p2_ships_to_place
_p2_ships_to_place:
	dl	5

	section	.data,"aw",@progbits
	public	_shots_left
_shots_left:
	dl	5

	section	.bss,"aw",@nobits
	public	_player_switcher
_player_switcher:
	rb	1

	section	.bss,"aw",@nobits
	public	_winner
_winner:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"Welcome! Here you can play Battleship. Remember that only the player number in the middle of the screen should be looking at a particular time.", 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"Press any key...", 0

	section	.rodata,"a",@progbits
	private	_.str.11
_.str.11:
	db	"How to Play", 0

	section	.rodata,"a",@progbits
	private	_.str.12
_.str.12:
	db	"You will see two grids. The one with dots is your ocean, the one with question marks is your hits.", 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"Use the arrow keys to aim and hit a spot on your opponent's grid. X marks hits, m marks miss.", 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"During the game, you can press 9 to bail out of this program.", 0

	section	.rodata,"a",@progbits
	private	_.str.15
_.str.15:
	db	"P%d wins!", 0

	section	.rodata,"a",@progbits
	private	_.str.16
_.str.16:
	db	" Press any", 0

	section	.rodata,"a",@progbits
	private	_.str.17
_.str.17:
	db	" key to ", 0

	section	.rodata,"a",@progbits
	private	_.str.18
_.str.18:
	db	" exit!", 0

	section	.rodata,"a",@progbits
	private	_.str.19
_.str.19:
	db	"github.com/weeklyd3/ti84", 0

	section	.rodata,"a",@progbits
	private	_.str.20
_.str.20:
	db	" ENTER= ", 0

	section	.rodata,"a",@progbits
	private	_.str.21
_.str.21:
	db	"Confirm ", 0

	section	.rodata,"a",@progbits
	private	_.str.22
_.str.22:
	db	"INVALID!", 0

	section	.rodata,"a",@progbits
	private	_.str.23
_.str.23:
	db	" ARROW= ", 0

	section	.rodata,"a",@progbits
	private	_.str.24
_.str.24:
	db	"  MOVE  ", 0

	section	.rodata,"a",@progbits
	private	_.str.25
_.str.25:
	db	"  2ND=  ", 0

	section	.rodata,"a",@progbits
	private	_.str.26
_.str.26:
	db	" ROTATE ", 0

	section	.rodata,"a",@progbits
	private	_.str.27
_.str.27:
	db	" CLEAR= ", 0

	section	.rodata,"a",@progbits
	private	_.str.28
_.str.28:
	db	"Nuke it!", 0

	section	.rodata,"a",@progbits
	private	_.str.29
_.str.29:
	db	" Target ", 0

	section	.rodata,"a",@progbits
	private	_.str.38
_.str.38:
	db	"  FIRE", 0

	section	.rodata,"a",@progbits
	private	_.str.39
_.str.39:
	db	" Shots:", 0

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	__Unwind_SjLj_Register
	extern	_malloc
	extern	_os_RealToStr
	extern	_os_DrawStatusBar
	extern	__setflag
	extern	_exit
	extern	_os_PutStrFull
	extern	_os_SetDrawBGColor
	extern	_os_GetCSC
	extern	_os_HomeUp
	extern	__frameset
	extern	_sprintf
	extern	_os_ClrLCD
	extern	__Unwind_SjLj_Unregister
	extern	_os_FloatToReal
	extern	__imulu
	extern	__fcmp
	extern	_os_SetCursorPos
