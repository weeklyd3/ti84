	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__Z9float2strfPc
__Z9float2strfPc:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, -8187281
	ld	a, 58
	ld	iyl, 0
	call	__fcmp
	jp	m, BB0_2
	ld	a, 0
	jr	BB0_3
BB0_2:
	ld	a, 1
BB0_3:
	bit	0, a
	ld	bc, 0
	jr	nz, BB0_5
	push	hl
	pop	bc
BB0_5:
	lea	hl, ix - 9
	bit	0, a
	jr	nz, BB0_7
	ld	iyl, e
BB0_7:
	push	iy
	push	bc
	push	hl
	ld	(ix - 12), hl
	call	_os_FloatToReal
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	dec	hl
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_os_RealToStr
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z7compareii
__Z7compareii:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	bc, (ix + 9)
	ld	de, -1
	push	hl
	pop	iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB1_4
	push	bc
	pop	hl
	lea	de, iy
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB1_3
	ld	de, 0
	jr	BB1_4
BB1_3:
	ld	de, 1
BB1_4:
	ex	de, hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -311
	call	__frameset
	lea	hl, ix - 11
	ld	bc, -262
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	lea	hl, ix - 14
	push	ix
	ld	bc, -265
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, ix - 34
	push	ix
	ld	bc, -268
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, ix - 52
	push	ix
	ld	bc, -277
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, ix - 61
	push	ix
	ld	bc, -280
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, ix - 65
	push	ix
	ld	bc, -289
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, ix - 95
	push	ix
	ld	bc, -283
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, ix - 109
	push	ix
	ld	bc, -274
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -259
	lea	hl, ix
	add	hl, bc
	push	ix
	ld	bc, -271
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 3
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.1
	push	hl
	call	_os_PutStrFull
	pop	hl
BB2_1:
	call	_os_GetCSC
	or	a, a
	jr	z, BB2_1
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 7
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.2
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 8
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, 4
	push	hl
	ld	bc, -262
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_os_GetStringInput
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -262
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strtol
	ld	bc, -262
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	ld	bc, -262
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_6
	ld	hl, _.str.4
	push	hl
	call	_os_PutStrFull
	pop	hl
BB2_4:
	call	_os_GetCSC
	or	a, a
	jr	z, BB2_4
	ld	hl, 1
	jp	BB2_57
BB2_6:
	ld	de, _.str.5
	push	de
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, 20
	push	hl
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_os_GetStringInput
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strtol
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	pop	hl
	ld	l, 8
	ld	(ix - 3), de
	ld	de, -295
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	call	__lshl
	call	__lshrs
	ld	l, a
	push	hl
	push	bc
	ld	de, (ix - 3)
	call	_srandom
	pop	hl
	pop	hl
	call	_clock
	ld	bc, -298
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	dec	bc
	add	ix, bc
	ld	(ix), e
	pop	ix
	push	ix
	ld	bc, -262
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	hl, 0
	jp	p, BB2_8
	push	hl
	pop	de
BB2_8:
	ld	bc, -286
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	ld	bc, -268
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	pop	bc
BB2_9:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB2_54
	ld	(ix - 3), de
	ld	de, -292
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (ix - 3)
	ld	bc, -311
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	call	_random
	ld	bc, 3
	call	__iand
	ld	a, l
	or	a, a
	jr	z, BB2_12
	push	hl
	pop	de
	inc	de
	ld	a, e
	cp	a, 3
	jp	nz, BB2_23
BB2_12:
	ld	bc, -308
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	call	_random
	ld	de, 9
	push	de
	pop	bc
	call	__iremu
	inc	hl
	ld	de, -302
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_random
	ld	bc, 9
	call	__iremu
	push	hl
	pop	de
	inc	de
	ld	(ix - 3), bc
	ld	bc, -308
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	ld	a, l
	or	a, a
	ld	bc, -305
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	(hl), de
	ld	bc, (ix - 3)
	ex	de, hl
	ld	de, -302
	lea	iy, ix
	jr	nz, BB2_14
	add	iy, de
	ld	bc, (iy)
	add	hl, bc
	push	ix
	ld	de, -308
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld.sis	hl, 43
	jr	BB2_15
BB2_14:
	add	iy, de
	ld	bc, (iy)
	call	__imulu
	push	ix
	ld	de, -308
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld.sis	hl, 42
BB2_15:
	ld	(ix - 36), l
	ld	(ix - 35), h
	ld	de, -302
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
BB2_16:
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -292
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	inc	de
	ld	bc, -262
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	ld	bc, -292
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	de
	ld	hl, _.str.10
	push	hl
	ld	bc, -277
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -277
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.11
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 2
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -286
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.12
	push	hl
	ld	bc, -283
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -283
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 3
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -305
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pea	ix - 36
	ld	bc, -302
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.13
	push	hl
	ld	bc, -280
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -280
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 4
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, 4
	push	hl
	ld	bc, -289
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_os_GetStringInput
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 65)
	cp	a, 81
	ld	hl, 0
	jp	z, BB2_57
	cp	a, 113
	jp	z, BB2_57
	ld	hl, 10
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -289
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strtol
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -308
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	or	a, a
	sbc	hl, de
	ld	bc, 1
	jr	z, BB2_20
	ld	bc, 0
BB2_20:
	ld	(ix - 3), de
	ld	de, -286
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	add	iy, bc
	push	ix
	ld	bc, -308
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	de, 1
	ld	hl, 0
	jr	nz, BB2_22
	ex	de, hl
BB2_22:
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -286
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	bc, -311
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -292
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	jp	BB2_9
BB2_23:
	ld	a, e
	cp	a, 2
	jr	nz, BB2_25
	ld.sis	hl, 45
	ld	(ix - 36), l
	ld	(ix - 35), h
	call	_random
	ld	bc, 9
	call	__iremu
	inc	hl
	ld	de, -302
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	call	_random
	ld	de, -302
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	call	__iremu
	push	hl
	pop	de
	inc	de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -302
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	push	ix
	ld	bc, -308
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -305
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	jp	BB2_16
BB2_25:
	ld.sis	hl, 47
	ld	(ix - 36), l
	ld	(ix - 35), h
	call	_random
	ld	bc, 7
	call	__iand
	push	hl
	pop	de
	ld	bc, 2
	add	hl, bc
	ld	a, e
	cp	a, 7
	ld	bc, -302
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	(iy), hl
	jr	c, BB2_30
	call	_random
	ld	bc, 3
	call	__iremu
	push	hl
	pop	iy
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	z, BB2_28
	ld	bc, 9
BB2_28:
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, 1
	ex	de, hl
	jp	z, BB2_46
	push	bc
	pop	de
	jp	BB2_46
BB2_30:
	ld	hl, JTI2_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB2_31:
	call	_random
	ld	bc, 1
	call	__iand
	push	hl
	pop	de
	inc	de
	ld	(ix - 3), bc
	ld	bc, -302
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	bc, (ix - 3)
	jp	BB2_47
BB2_32:
	call	_random
	ld	bc, 1
	xor	a, a
	call	__land
	bit	0, l
	push	bc
	pop	de
	jp	z, BB2_46
	ld	hl, 3
	jp	BB2_45
BB2_34:
	call	_random
	ld	bc, 3
	call	__iremu
	push	hl
	pop	de
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	inc	bc
	jr	z, BB2_36
	ld	bc, 4
BB2_36:
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, 1
	ex	de, hl
	ld	(ix - 3), bc
	ld	bc, -302
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	ld	bc, (ix - 3)
	jr	z, BB2_47
	push	bc
	pop	de
	jr	BB2_47
BB2_38:
	call	_random
	ld	bc, 1
	xor	a, a
	call	__land
	bit	0, l
	push	bc
	pop	de
	jr	z, BB2_46
	ld	hl, 5
	jr	BB2_45
BB2_40:
	call	_random
	ld	bc, 3
	call	__iand
	ld	a, l
	or	a, a
	ld	de, 1
	ld	(ix - 3), bc
	ld	bc, -302
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	ld	bc, (ix - 3)
	jr	z, BB2_47
	inc	hl
	ld	a, l
	cp	a, 3
	ld	de, 3
	jp	z, BB2_51
	ld	de, 6
	jr	BB2_51
BB2_43:
	call	_random
	ld	bc, 1
	xor	a, a
	call	__land
	bit	0, l
	push	bc
	pop	de
	jr	z, BB2_46
	ld	hl, 7
BB2_45:
	ex	de, hl
BB2_46:
	ld	bc, -302
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB2_47:
	ld	bc, -305
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	b, iyl
	ld	c, e
	call	__bdivu
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	de, -308
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	jp	BB2_16
BB2_48:
	call	_random
	ld	bc, 3
	call	__iand
	ld	a, l
	or	a, a
	ld	de, 1
	ld	(ix - 3), bc
	ld	bc, -302
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	ld	bc, (ix - 3)
	jr	z, BB2_47
	inc	hl
	ld	a, l
	cp	a, 3
	ld	de, 4
	jr	z, BB2_51
	ld	de, 8
BB2_51:
	ld	a, l
	cp	a, 2
	ld	hl, 2
	jr	z, BB2_53
	ex	de, hl
BB2_53:
	ex	de, hl
	jr	BB2_47
BB2_54:
	call	_clock
	ld	(ix - 3), de
	ld	de, -298
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	dec	de
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__lsub
	push	hl
	pop	bc
	ld	a, e
	call	__ultof
	or	a, a
	sbc	hl, hl
	ld	e, 56
	call	__fmul
	ld	(ix - 3), de
	push	ix
	ld	de, -265
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	l, a
	push	ix
	ld	de, -262
	add	ix, de
	ld	(ix), hl
	pop	ix
	pea	ix - 104
	push	hl
	push	bc
	ld	de, (ix - 3)
	call	__Z9float2strfPc
	pop	hl
	pop	hl
	pop	hl
	ld	de, -265
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	de, -262
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	ld	a, l
	ld	hl, 2097152
	ld	e, 65
	call	__fmul
	ld	(ix - 3), de
	push	ix
	ld	de, -262
	add	ix, de
	ld	(ix), bc
	pop	ix
	push	ix
	ld	de, -265
	add	ix, de
	ld	(ix), a
	pop	ix
	push	ix
	ld	de, -268
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -286
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	hl, de
	ld	bc, (ix - 3)
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	hl
	ld	e, a
	ld	(ix - 3), de
	ld	de, -262
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	ld	de, -265
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__fdiv
	ld	(ix - 3), de
	push	ix
	ld	de, -262
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	de, (ix - 3)
	ld	d, a
	ld	(ix - 3), de
	push	ix
	ld	de, -268
	add	ix, de
	ld	hl, (ix)
	pop	ix
	push	hl
	pop	iy
	push	hl
	pop	bc
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	hl
	ld	de, (ix - 3)
	ld	e, a
	ld	(ix - 3), de
	ld	de, -262
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	ld	de, (ix - 3)
	ld	a, d
	call	__fadd
	ld	l, a
	ld	(ix - 3), bc
	push	ix
	ld	bc, -274
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	hl
	ld	bc, (ix - 3)
	push	bc
	call	__Z9float2strfPc
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -295
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -274
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -286
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _.str.14
	push	hl
	ld	bc, -271
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	bc, -271
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_os_PutStrFull
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 7
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.15
	push	hl
	call	_os_PutStrFull
	pop	hl
BB2_55:
	call	_os_GetCSC
	or	a, a
	jr	z, BB2_55
	or	a, a
	sbc	hl, hl
BB2_57:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI2_0
JTI2_0:
	dl	BB2_31
	dl	BB2_32
	dl	BB2_34
	dl	BB2_38
	dl	BB2_40
	dl	BB2_43
	dl	BB2_48

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"Here, you will be shown a bunch of calculations. Please do them!", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"No goofing when you're not supposed to, ok? Press any key", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"Number of rounds (0 quits):", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"> ", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"Zero or bad value entered. Quitting.", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"Enter RNG seed.", 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"Round %d of %d", 0

	section	.rodata,"a",@progbits
	private	_.str.11
_.str.11:
	db	"Enter Q to quit.", 0

	section	.rodata,"a",@progbits
	private	_.str.12
_.str.12:
	db	"Correct/Wrong: %d/%d", 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"%d %s %d = ?", 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"Correct/Wrong: %d/%d. You scored %s points using seed %d. Press any key to end...", 0

	section	.rodata,"a",@progbits
	private	_.str.15
_.str.15:
	db	"github.com/weeklyd3/ti84", 0

	ident	"clang version 15.0.0 (https://github.com/CE-Programming/llvm-project 23b78267b5d376b232475d0805a937e54b61e0d0)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_sprintf
	extern	__fadd
	extern	__lsub
	extern	_os_ClrLCD
	extern	_os_RealToStr
	extern	_os_DrawStatusBar
	extern	__ultof
	extern	__fmul
	extern	__setflag
	extern	__Unwind_SjLj_Unregister
	extern	_srandom
	extern	__lshl
	extern	__iand
	extern	_os_FloatToReal
	extern	__iremu
	extern	_os_PutStrFull
	extern	__fdiv
	extern	__imulu
	extern	__land
	extern	_os_GetStringInput
	extern	_strtol
	extern	__ltof
	extern	_os_GetCSC
	extern	__fcmp
	extern	_clock
	extern	__lshrs
	extern	_os_HomeUp
	extern	__frameset0
	extern	__bdivu
	extern	_os_SetCursorPos
